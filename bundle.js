(()=>{"use strict";var n={208:(n,e,t)=>{t.d(e,{A:()=>v});var r=t(354),o=t.n(r),i=t(314),a=t.n(i),s=t(417),A=t.n(s),l=new URL(t(210),t.b),p=new URL(t(16),t.b),c=new URL(t(391),t.b),d=new URL(t(437),t.b),u=new URL(t(634),t.b),h=new URL(t(439),t.b),m=new URL(t(764),t.b),C=a()(o()),g=A()(l),f=A()(p),b=A()(c),B=A()(d),y=A()(u),E=A()(h),x=A()(m);C.push([n.id,`* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\nbody {\n  display: flex;\n  height: 100vh;\n  flex-direction: column;\n  justify-content: space-between;\n  background: linear-gradient(\n    90deg,\n    rgb(81, 38, 3) 0%,\n    rgba(187, 94, 19, 1) 50%,\n    rgb(81, 38, 3) 100%\n  );\n  font-family: "MyCustomFont", "sans-serif";\n}\n@font-face {\n  font-family: "MyCustomFont";\n  src: url(${g}) format("woff2"),\n    url(${f}) format("woff");\n  font-weight: normal;\n  font-style: normal;\n}\n/* header styles */\nheader {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100px;\n  text-shadow: 10px 10px 10px rgb(236, 153, 37);\n  letter-spacing: 0.5rem;\n  font-size: 30px;\n  font-style: italic;\n}\n/* main styles */\n/* main {\n  height: 100%;\n} */\nmain {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  flex: 1;\n  align-items: center;\n}\n/* players card style */\n#players-card {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 30px;\n  font-family: "Cute Font", cursive;\n}\n#vs {\n  font-size: 50px;\n}\nlabel {\n  font-size: 25px;\n}\n#players-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 80px;\n}\n#player-one-container,\n#player-two-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n  border-radius: 20px;\n  height: 280px;\n  box-shadow: 0px 15px 40px black;\n}\nlabel,\ninput {\n  font-weight: bold;\n}\ninput {\n  text-align: center;\n  width: 50%;\n  border: none;\n  outline: none;\n  border-radius: 10px;\n  margin-bottom: 8px;\n  font-family: "Cute Font", cursive;\n  font-size: 20px;\n  background-color: wheat;\n}\n.fa-solid {\n  font-size: 140px;\n  margin-bottom: 10px;\n}\n/* play and beggin button styles */\n#beggin-button {\n  margin-bottom: 10px;\n}\n#play-button,\n#beggin-button {\n  width: 100px;\n  height: 35px;\n  border-radius: 8px;\n  font-weight: bold;\n  border: none;\n  cursor: pointer;\n  transition: background-color 0.4s ease;\n  font-family: "MyCustomFont", "sans-serif";\n  font-size: 20px;\n  background-color: black;\n  color: white;\n}\n#play-button:hover,\n#beggin-button:hover {\n  background-color: white;\n  color: black;\n}\n/* placing ships card styles */\n#place-player-ships-card {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  box-shadow: 0px 15px 40px black;\n  height: 430px;\n  width: 550px;\n  border-radius: 10px;\n  margin-bottom: 40px;\n  gap: 10px;\n}\n#place-ships-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 90%;\n  flex: 1;\n}\n#player-board-header {\n  font-size: 20px;\n}\n#place-ships-header {\n  margin-top: 10px;\n  font-size: 30px;\n}\n#place-ships-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n}\n#player-board-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 5px;\n  width: 80%;\n  height: 100%;\n}\n#player-game-board,\n#computer-game-board {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n  width: 280px;\n  height: 280px;\n  box-shadow: 0px 15px 40px black;\n}\n#computer-game-board div {\n  cursor: pointer;\n}\n#computer-game-board div:hover {\n  background-color: red;\n}\n\n#player-ship-type-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  /* width: 280px; */\n  height: 100%;\n  width: 50%;\n  box-shadow: 0px 15px 40px black;\n  border-radius: 5px;\n  padding: 5px;\n}\n.player-ship-type {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n}\n#carrier-ship,\n#battle-ship,\n#cruiser-ship,\n#submarine-ship,\n#destroyer-ship {\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  border: none;\n  outline: none;\n  transition: transform 0.3s ease;\n  position: absolute;\n  cursor: pointer;\n  width: 170px;\n  height: 40px;\n  margin-top: 20px;\n  pointer-events: "none";\n}\n#carrier-ship:hover,\n#battle-ship:hover,\n#cruiser-ship:hover,\n#submarine-ship:hover,\n#destroyer-ship:hover {\n  transform: scale(1.1);\n  cursor: pointer;\n}\n/* fix hiding computer images */\n/* .computer-ship-image {\n  z-index: 10;\n  background-color: white;\n} */\n\n#carrier-ship {\n  background-image: url(${b});\n}\n#battle-ship {\n  background-image: url(${B});\n}\n#cruiser-ship {\n  background-image: url(${y});\n}\n#submarine-ship {\n  background-image: url(${E});\n}\n#destroyer-ship {\n  background-image: url(${x});\n}\n.hover-zoom {\n  transition: transform 0.3s ease;\n}\n.hover-zoom.hovered {\n  transform: scale(1.2);\n}\n.square {\n  position: relative;\n  border: 1px solid;\n}\n/* player vs computer card styles */\n\n#battle-card {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 100px;\n}\n#vs {\n  font-size: 40px;\n}\n#player-name,\n#computer-name {\n  font-size: 25px;\n}\n#player-battle-container,\n#computer-battle-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n}\n\n/* footer styles */\nfooter {\n  border: 1px solid black;\n  height: 50px;\n}\n`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:['* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\nbody {\n  display: flex;\n  height: 100vh;\n  flex-direction: column;\n  justify-content: space-between;\n  background: linear-gradient(\n    90deg,\n    rgb(81, 38, 3) 0%,\n    rgba(187, 94, 19, 1) 50%,\n    rgb(81, 38, 3) 100%\n  );\n  font-family: "MyCustomFont", "sans-serif";\n}\n@font-face {\n  font-family: "MyCustomFont";\n  src: url("./fonts/DDayStencilSC-Regular.woff2") format("woff2"),\n    url("./fonts/DDayStencilSC-Regular.woff") format("woff");\n  font-weight: normal;\n  font-style: normal;\n}\n/* header styles */\nheader {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100px;\n  text-shadow: 10px 10px 10px rgb(236, 153, 37);\n  letter-spacing: 0.5rem;\n  font-size: 30px;\n  font-style: italic;\n}\n/* main styles */\n/* main {\n  height: 100%;\n} */\nmain {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  flex: 1;\n  align-items: center;\n}\n/* players card style */\n#players-card {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 30px;\n  font-family: "Cute Font", cursive;\n}\n#vs {\n  font-size: 50px;\n}\nlabel {\n  font-size: 25px;\n}\n#players-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 80px;\n}\n#player-one-container,\n#player-two-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n  border-radius: 20px;\n  height: 280px;\n  box-shadow: 0px 15px 40px black;\n}\nlabel,\ninput {\n  font-weight: bold;\n}\ninput {\n  text-align: center;\n  width: 50%;\n  border: none;\n  outline: none;\n  border-radius: 10px;\n  margin-bottom: 8px;\n  font-family: "Cute Font", cursive;\n  font-size: 20px;\n  background-color: wheat;\n}\n.fa-solid {\n  font-size: 140px;\n  margin-bottom: 10px;\n}\n/* play and beggin button styles */\n#beggin-button {\n  margin-bottom: 10px;\n}\n#play-button,\n#beggin-button {\n  width: 100px;\n  height: 35px;\n  border-radius: 8px;\n  font-weight: bold;\n  border: none;\n  cursor: pointer;\n  transition: background-color 0.4s ease;\n  font-family: "MyCustomFont", "sans-serif";\n  font-size: 20px;\n  background-color: black;\n  color: white;\n}\n#play-button:hover,\n#beggin-button:hover {\n  background-color: white;\n  color: black;\n}\n/* placing ships card styles */\n#place-player-ships-card {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  box-shadow: 0px 15px 40px black;\n  height: 430px;\n  width: 550px;\n  border-radius: 10px;\n  margin-bottom: 40px;\n  gap: 10px;\n}\n#place-ships-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 90%;\n  flex: 1;\n}\n#player-board-header {\n  font-size: 20px;\n}\n#place-ships-header {\n  margin-top: 10px;\n  font-size: 30px;\n}\n#place-ships-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n}\n#player-board-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 5px;\n  width: 80%;\n  height: 100%;\n}\n#player-game-board,\n#computer-game-board {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n  width: 280px;\n  height: 280px;\n  box-shadow: 0px 15px 40px black;\n}\n#computer-game-board div {\n  cursor: pointer;\n}\n#computer-game-board div:hover {\n  background-color: red;\n}\n\n#player-ship-type-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  /* width: 280px; */\n  height: 100%;\n  width: 50%;\n  box-shadow: 0px 15px 40px black;\n  border-radius: 5px;\n  padding: 5px;\n}\n.player-ship-type {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n}\n#carrier-ship,\n#battle-ship,\n#cruiser-ship,\n#submarine-ship,\n#destroyer-ship {\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  border: none;\n  outline: none;\n  transition: transform 0.3s ease;\n  position: absolute;\n  cursor: pointer;\n  width: 170px;\n  height: 40px;\n  margin-top: 20px;\n  pointer-events: "none";\n}\n#carrier-ship:hover,\n#battle-ship:hover,\n#cruiser-ship:hover,\n#submarine-ship:hover,\n#destroyer-ship:hover {\n  transform: scale(1.1);\n  cursor: pointer;\n}\n/* fix hiding computer images */\n/* .computer-ship-image {\n  z-index: 10;\n  background-color: white;\n} */\n\n#carrier-ship {\n  background-image: url("./images/ships/carrier.svg");\n}\n#battle-ship {\n  background-image: url("./images/ships/battleship.svg");\n}\n#cruiser-ship {\n  background-image: url("./images/ships/cruiser.svg");\n}\n#submarine-ship {\n  background-image: url("./images/ships/submarine.svg");\n}\n#destroyer-ship {\n  background-image: url("./images/ships/destroyer.svg");\n}\n.hover-zoom {\n  transition: transform 0.3s ease;\n}\n.hover-zoom.hovered {\n  transform: scale(1.2);\n}\n.square {\n  position: relative;\n  border: 1px solid;\n}\n/* player vs computer card styles */\n\n#battle-card {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 100px;\n}\n#vs {\n  font-size: 40px;\n}\n#player-name,\n#computer-name {\n  font-size: 25px;\n}\n#player-battle-container,\n#computer-battle-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n}\n\n/* footer styles */\nfooter {\n  border: 1px solid black;\n  height: 50px;\n}\n'],sourceRoot:""}]);const v=C},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(a[A]=!0)}for(var l=0;l<n.length;l++){var p=[].concat(n[l]);r&&a[p[0]]||(void 0!==i&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=i),t&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=t):p[2]=t),o&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=o):p[4]="".concat(o)),e.push(p))}},e}},417:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},a=[],s=0;s<n.length;s++){var A=n[s],l=r.base?A[0]+r.base:A[0],p=i[l]||0,c="".concat(l," ").concat(p);i[l]=p+1;var d=t(c),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==d)e[d].references++,e[d].updater(u);else{var h=o(u,r);r.byIndex=s,e.splice(s,0,{identifier:c,updater:h,references:1})}a.push(c)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var s=t(i[a]);e[s].references--}for(var A=r(n,o),l=0;l<i.length;l++){var p=t(i[l]);0===e[p].references&&(e[p].updater(),e.splice(p,1))}i=A}}},659:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},16:(n,e,t)=>{n.exports=t.p+"6f126a706023fe19a73f.woff"},210:(n,e,t)=>{n.exports=t.p+"dfee96cf69210b32e6e5.woff2"},437:(n,e,t)=>{n.exports=t.p+"d56e5a89beb359219e25.svg"},391:(n,e,t)=>{n.exports=t.p+"008846a84b2a34dde315.svg"},634:(n,e,t)=>{n.exports=t.p+"0504ee6feab7e47038d3.svg"},764:(n,e,t)=>{n.exports=t.p+"56e5c8a88ff718d93efc.svg"},439:(n,e,t)=>{n.exports=t.p+"543bf6eb30d63dfd7a2f.svg"}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,exports:{}};return n[r](i,i.exports,t),i.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");if(r.length)for(var o=r.length-1;o>-1&&(!n||!/^http(s?):/.test(n));)n=r[o--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0;var r=t(72),o=t.n(r),i=t(825),a=t.n(i),s=t(659),A=t.n(s),l=t(56),p=t.n(l),c=t(540),d=t.n(c),u=t(113),h=t.n(u),m=t(208),C={};C.styleTagTransform=h(),C.setAttributes=p(),C.insert=A().bind(null,"head"),C.domAPI=a(),C.insertStyleElement=d(),o()(m.A,C),m.A&&m.A.locals&&m.A.locals;const g=class{constructor(n,e){this.isShip=!0,this.shipName=n,this.shipLength=e,this.numberOfHits=0,this.isShipSunk=!1}hit(){return this.numberOfHits++}isSunk(){return this.numberOfHits>=this.shipLength?this.isShipSunk=!0:this.isShipSunk}getShipName(){return this.shipName}getShipLength(){return this.shipLength}},f=class{constructor(){this.rows=10,this.columns=10,this.board=[]}createBoard(){for(let n=0;n<this.rows;n++){this.board[n]=[];for(let e=0;e<this.columns;e++)this.board[n][e]={coords:[n,e],isShip:!1}}}placeShip(n,e,t,r){const o=new g(t,r);this.board[n][e]=o}isWithinBounds(n,e){return n>=0&&n<this.rows&&e>=0&&e<this.columns}getPlayerCurrValidCoords(n,e){const t=[Number(n.getAttribute("data-x")),Number(n.getAttribute("data-y"))],r=this.getAllRightSideCoords(t,e);return r.every((([n,e])=>this.isWithinBounds(n,e)))?r:null}isShipCoordsValid(n,e){return!e.some((e=>e.some((e=>n.some((n=>JSON.stringify(e)===JSON.stringify(n)))))))}getAllRightSideCoords(n,e){const[t,r]=n;return[[t,r],[t,r+1],[t,r+2],[t,r+3],[t,r+4]].slice(0,e)}getRandomComputerShipValidCoords(n){const e=this.board.map((n=>n.map((n=>n.coords)))),t=Math.floor(Math.random()*e.length),r=e[t][t];if(!r)return;const o=this.getAllRightSideCoords(r,n);return o.every((([n,e])=>this.isWithinBounds(n,e)))?o:null}getCurrShip(n,e){return this.board[n][e]}getAllCurrShipItems(n){return this.board.flatMap((e=>e.filter((e=>e.shipName===n.shipName))))}makeAllShipItemsSunk(n){const e=this.getAllCurrShipItems(n);e.forEach((n=>n.isSunk())),console.log(e)}receiveAttack(n){this.getAllCurrShipItems(n).forEach((n=>n.hit()))}getOtherShipSquareItems(n){console.log(n)}isAllShipsSunk(){for(const n in this.board){const e=[];for(const t in this.board[n])this.board[n][t].hasOwnProperty("value")||e.push(this.board[n][t])}return!!allShips.every((n=>n.isShipSunk))}},b=class{constructor(n){this.name=n,this.gameBoard=new f,this.gameBoard.createBoard()}getName(){return this.name}setShipPositionOnBoard(n,e,t){n.map((n=>{const[r,o]=n;this.gameBoard.placeShip(r,o,e,t)}))}createShipType(n){return new g(n,{"carrier-ship":5,"battle-ship":4,"cruiser-ship":3,"submarine-ship":3,"destroyer-ship":2}[n])}},B=document.getElementById("player-game-board"),y=document.getElementById("computer-game-board"),E=[...document.querySelectorAll(".player-ship-image")],x=document.getElementById("play-button"),v=document.getElementById("players-card"),S=document.getElementById("player-one-input"),k=document.getElementById("player-two-input"),w=document.getElementById("player-battle-container"),j=document.getElementById("beggin-button"),z=document.getElementById("place-player-ships-card"),Y=document.getElementById("battle-card"),I=document.getElementById("player-name"),U=document.getElementById("computer-name"),N=new b("human"),O=N.gameBoard,D=new b("computer"),L=D.gameBoard,M=(n,e)=>{for(const t of n)for(const n of t){const t=document.createElement("div"),[r,o]=n.coords;t.textContent=[r,o],t.setAttribute("data-x",r),t.setAttribute("data-y",o),t.className="square",e.appendChild(t)}},R={allPreviousShipCoords:[],render(n){n.style.pointerEvents="none";const e=N.createShipType(n.id),t=e.getShipName(),r=e.getShipLength();this.resizePlayerShipImage(n,r);const o=e=>this.followMouse(n,e);document.addEventListener("mousemove",o),this.makeCurrShipUnclickable(n),this.handlePlayerSquareEvent(n,o,t,r)},resizePlayerShipImage(n,e){const t=document.querySelector(".square");n.style.width=t.offsetWidth*e+"px",n.style.height=`${t.offsetHeight}px`},followMouse(n,e){const t=e.clientX,r=e.clientY-n.height/2;n.style.left=`${t}px`,n.style.top=`${r}px`},makeCurrShipUnclickable(n){const e=E.indexOf(n);E[e].style.pointerEvents="none"},handlePlayerSquareEvent(n,e,t,r){const o=[...B.children];let i=!1;o.map((o=>o.addEventListener("click",(()=>{if(!i){const a=O.getPlayerCurrValidCoords(o,r);if(!a)return;if(!O.isShipCoordsValid(a,this.allPreviousShipCoords))return;document.removeEventListener("mousemove",e),this.allPreviousShipCoords.push(a),this.placeShipOnBoard(o,n),N.setShipPositionOnBoard(a,t,r),i=!0}}))))},placeShipOnBoard(n,e){e.style.position="absolute",e.style.top="-75%",e.style.left="0%",e.style.pointerEvents="none",n.appendChild(e)}},q={render(){const n=this.getComputerShipTypes();this.placeComputerShips(n)},getComputerShipTypes(){const n=E.map((n=>{const e=n.cloneNode(!0);return e.className="computer-ship-image",e}));return[["carrier-ship",5,n[0]],["battle-ship",4,n[1]],["cruiser-ship",3,n[2]],["submarine-ship",3,n[3]],["destroyer-ship",2,n[4]]]},placeComputerShips(n){n.map((([n,e,t])=>{let r=this.getValidCoords(e);this.placeComputerShipsOnBoard(r[0],t,e),this.hideComputerShipImages(),D.setShipPositionOnBoard(r,n,e)}))},getValidCoords(n){let e=null;for(;!e;)e=L.getRandomComputerShipValidCoords(n);return e},placeComputerShipsOnBoard(n,e,t){R.resizePlayerShipImage(e,t);const[r,o]=n,i=[...y.children].find((n=>+n.dataset.x==r&&+n.dataset.y==o));R.placeShipOnBoard(i,e)},hideComputerShipImages(){[...document.querySelectorAll(".computer-ship-image")].forEach((n=>n.style.display="none"))}};M(O.board,B),E.map((n=>{n.addEventListener("click",R.render(n))})),x.addEventListener("click",(function(){""!=S.value&&""!=k.value?(v.style.display="none",z.style.display="flex"):alert("Must Enter Names!")})),j.addEventListener("click",(()=>{0==[...document.querySelectorAll(".player-ship-type")].filter((n=>n.querySelector("img"))).length?(z.style.display="none",Y.style.display="flex",I.textContent=`${S.value.toUpperCase()} WATERS`,U.textContent=`${k.value.toUpperCase()} WATERS`,w.appendChild(B),M(L.board,y),q.render(),console.log("human board",O.board),console.log("computer boad",L.board)):alert("Must Place All Player Ships!"),T()}));let P=N.getName();const T=()=>{"human"==P?(console.log("attack computer board"),[...y.children].map((n=>{n.addEventListener("click",(()=>(n=>{n.style.pointerEvents="none";const e=(n=>[Number(n.dataset.x),Number(n.dataset.y)])(n),[t,r]=e,o=L.getCurrShip(t,r);if(o.isShip&&(n.style.background="red",L.receiveAttack(o),L.makeAllShipItemsSunk(o),o.isSunk())){const n=(n=>[...document.querySelectorAll(".computer-ship-image")].find((e=>e.id==n.shipName)))(o);console.log(n),n.style.display="flex",n.style.position="absolute"}})(n)))}))):console.log("attack player board")}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,