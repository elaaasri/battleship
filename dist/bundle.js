(()=>{"use strict";var e={208:(e,n,t)=>{t.d(n,{A:()=>v});var r=t(354),o=t.n(r),i=t(314),a=t.n(i),s=t(417),A=t.n(s),l=new URL(t(210),t.b),p=new URL(t(16),t.b),c=new URL(t(391),t.b),d=new URL(t(437),t.b),u=new URL(t(634),t.b),h=new URL(t(439),t.b),m=new URL(t(764),t.b),g=a()(o()),C=A()(l),f=A()(p),y=A()(c),B=A()(d),b=A()(u),E=A()(h),x=A()(m);g.push([e.id,`* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\nbody {\n  display: flex;\n  height: 100vh;\n  flex-direction: column;\n  justify-content: space-between;\n  background: linear-gradient(\n    90deg,\n    rgb(81, 38, 3) 0%,\n    rgba(187, 94, 19, 1) 50%,\n    rgb(81, 38, 3) 100%\n  );\n  font-family: "MyCustomFont", "sans-serif";\n}\n@font-face {\n  font-family: "MyCustomFont";\n  src: url(${C}) format("woff2"),\n    url(${f}) format("woff");\n  font-weight: normal;\n  font-style: normal;\n}\n/* header styles */\nheader {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100px;\n  text-shadow: 10px 10px 10px rgb(236, 153, 37);\n  letter-spacing: 0.5rem;\n  font-size: 30px;\n  font-style: italic;\n}\n/* main styles */\n/* main {\n  height: 100%;\n} */\nmain {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  flex: 1;\n  align-items: center;\n}\n/* players card style */\n#players-card {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 30px;\n  font-family: "Cute Font", cursive;\n}\n#vs {\n  font-size: 50px;\n}\nlabel {\n  font-size: 25px;\n}\n#players-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 80px;\n}\n#player-one-container,\n#player-two-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n  border-radius: 20px;\n  height: 280px;\n  box-shadow: 0px 15px 40px black;\n}\nlabel,\ninput {\n  font-weight: bold;\n}\ninput {\n  text-align: center;\n  width: 50%;\n  border: none;\n  outline: none;\n  border-radius: 10px;\n  margin-bottom: 8px;\n  font-family: "Cute Font", cursive;\n  font-size: 20px;\n  background-color: wheat;\n}\n.fa-solid {\n  font-size: 140px;\n  margin-bottom: 10px;\n}\n/* play and beggin button styles */\n#beggin-button {\n  margin-bottom: 10px;\n}\n#play-button,\n#beggin-button {\n  width: 100px;\n  height: 35px;\n  border-radius: 8px;\n  font-weight: bold;\n  border: none;\n  cursor: pointer;\n  transition: background-color 0.4s ease;\n  font-family: "MyCustomFont", "sans-serif";\n  font-size: 20px;\n  background-color: black;\n  color: white;\n}\n#play-button:hover,\n#beggin-button:hover {\n  background-color: white;\n  color: black;\n}\n/* placing ships card styles */\n#place-player-ships-card {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  box-shadow: 0px 15px 40px black;\n  height: 430px;\n  width: 550px;\n  border-radius: 10px;\n  margin-bottom: 40px;\n  gap: 10px;\n}\n#place-ships-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 90%;\n  flex: 1;\n}\n#player-board-header {\n  font-size: 20px;\n}\n#place-ships-header {\n  margin-top: 10px;\n  font-size: 30px;\n}\n#place-ships-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n}\n#player-board-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 5px;\n  width: 80%;\n  height: 100%;\n}\n#player-game-board,\n#computer-game-board {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n  width: 280px;\n  height: 280px;\n  box-shadow: 0px 15px 40px black;\n}\n/* #computer-game-board div {\n  cursor: pointer;\n} */\n#computer-game-board div:hover,\n#player-game-board div:hover {\n  background-color: yellow;\n}\n\n#player-ship-type-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  /* width: 280px; */\n  height: 100%;\n  width: 50%;\n  box-shadow: 0px 15px 40px black;\n  border-radius: 5px;\n  padding: 5px;\n}\n.player-ship-type {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n}\n#carrier-ship,\n#battle-ship,\n#cruiser-ship,\n#submarine-ship,\n#destroyer-ship {\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  border: none;\n  outline: none;\n  transition: transform 0.3s ease;\n  position: absolute;\n  cursor: pointer;\n  width: 170px;\n  height: 40px;\n  margin-top: 20px;\n  pointer-events: "none";\n}\n#carrier-ship:hover,\n#battle-ship:hover,\n#cruiser-ship:hover,\n#submarine-ship:hover,\n#destroyer-ship:hover {\n  transform: scale(1.1);\n  cursor: pointer;\n}\n/* fix hiding computer images */\n/* .computer-ship-image {\n  z-index: 10;\n} */\n\n#carrier-ship {\n  background-image: url(${y});\n}\n#battle-ship {\n  background-image: url(${B});\n}\n#cruiser-ship {\n  background-image: url(${b});\n}\n#submarine-ship {\n  background-image: url(${E});\n}\n#destroyer-ship {\n  background-image: url(${x});\n}\n.hover-zoom {\n  transition: transform 0.3s ease;\n}\n.hover-zoom.hovered {\n  transform: scale(1.2);\n}\n.square {\n  position: relative;\n  border: 1px solid;\n}\n/* player vs computer card styles */\n\n#battle-card {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 100px;\n}\n#vs {\n  font-size: 40px;\n}\n#player-name,\n#computer-name {\n  font-size: 25px;\n}\n#player-battle-container,\n#computer-battle-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n}\n\n/* footer styles */\nfooter {\n  border: 1px solid black;\n  height: 50px;\n}\n`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;AACxB;AACA;EACE,aAAa;EACb,aAAa;EACb,sBAAsB;EACtB,8BAA8B;EAC9B;;;;;GAKC;EACD,yCAAyC;AAC3C;AACA;EACE,2BAA2B;EAC3B;0DAC0D;EAC1D,mBAAmB;EACnB,kBAAkB;AACpB;AACA,kBAAkB;AAClB;EACE,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,aAAa;EACb,6CAA6C;EAC7C,sBAAsB;EACtB,eAAe;EACf,kBAAkB;AACpB;AACA,gBAAgB;AAChB;;GAEG;AACH;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,OAAO;EACP,mBAAmB;AACrB;AACA,uBAAuB;AACvB;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,SAAS;EACT,iCAAiC;AACnC;AACA;EACE,eAAe;AACjB;AACA;EACE,eAAe;AACjB;AACA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,SAAS;AACX;AACA;;EAEE,aAAa;EACb,sBAAsB;EACtB,6BAA6B;EAC7B,mBAAmB;EACnB,mBAAmB;EACnB,aAAa;EACb,+BAA+B;AACjC;AACA;;EAEE,iBAAiB;AACnB;AACA;EACE,kBAAkB;EAClB,UAAU;EACV,YAAY;EACZ,aAAa;EACb,mBAAmB;EACnB,kBAAkB;EAClB,iCAAiC;EACjC,eAAe;EACf,uBAAuB;AACzB;AACA;EACE,gBAAgB;EAChB,mBAAmB;AACrB;AACA,kCAAkC;AAClC;EACE,mBAAmB;AACrB;AACA;;EAEE,YAAY;EACZ,YAAY;EACZ,kBAAkB;EAClB,iBAAiB;EACjB,YAAY;EACZ,eAAe;EACf,sCAAsC;EACtC,yCAAyC;EACzC,eAAe;EACf,uBAAuB;EACvB,YAAY;AACd;AACA;;EAEE,uBAAuB;EACvB,YAAY;AACd;AACA,8BAA8B;AAC9B;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,+BAA+B;EAC/B,aAAa;EACb,YAAY;EACZ,mBAAmB;EACnB,mBAAmB;EACnB,SAAS;AACX;AACA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,UAAU;EACV,OAAO;AACT;AACA;EACE,eAAe;AACjB;AACA;EACE,gBAAgB;EAChB,eAAe;AACjB;AACA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,SAAS;AACX;AACA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,QAAQ;EACR,UAAU;EACV,YAAY;AACd;AACA;;EAEE,aAAa;EACb,sCAAsC;EACtC,mCAAmC;EACnC,YAAY;EACZ,aAAa;EACb,+BAA+B;AACjC;AACA;;GAEG;AACH;;EAEE,wBAAwB;AAC1B;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,8BAA8B;EAC9B,kBAAkB;EAClB,YAAY;EACZ,UAAU;EACV,+BAA+B;EAC/B,kBAAkB;EAClB,YAAY;AACd;AACA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,WAAW;EACX,YAAY;AACd;AACA;;;;;EAKE,sBAAsB;EACtB,4BAA4B;EAC5B,2BAA2B;EAC3B,YAAY;EACZ,aAAa;EACb,+BAA+B;EAC/B,kBAAkB;EAClB,eAAe;EACf,YAAY;EACZ,YAAY;EACZ,gBAAgB;EAChB,sBAAsB;AACxB;AACA;;;;;EAKE,qBAAqB;EACrB,eAAe;AACjB;AACA,+BAA+B;AAC/B;;GAEG;;AAEH;EACE,yDAAmD;AACrD;AACA;EACE,yDAAsD;AACxD;AACA;EACE,yDAAmD;AACrD;AACA;EACE,yDAAqD;AACvD;AACA;EACE,yDAAqD;AACvD;AACA;EACE,+BAA+B;AACjC;AACA;EACE,qBAAqB;AACvB;AACA;EACE,kBAAkB;EAClB,iBAAiB;AACnB;AACA,mCAAmC;;AAEnC;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,UAAU;AACZ;AACA;EACE,eAAe;AACjB;AACA;;EAEE,eAAe;AACjB;AACA;;EAEE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,SAAS;AACX;;AAEA,kBAAkB;AAClB;EACE,uBAAuB;EACvB,YAAY;AACd",sourcesContent:['* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\nbody {\n  display: flex;\n  height: 100vh;\n  flex-direction: column;\n  justify-content: space-between;\n  background: linear-gradient(\n    90deg,\n    rgb(81, 38, 3) 0%,\n    rgba(187, 94, 19, 1) 50%,\n    rgb(81, 38, 3) 100%\n  );\n  font-family: "MyCustomFont", "sans-serif";\n}\n@font-face {\n  font-family: "MyCustomFont";\n  src: url("./fonts/DDayStencilSC-Regular.woff2") format("woff2"),\n    url("./fonts/DDayStencilSC-Regular.woff") format("woff");\n  font-weight: normal;\n  font-style: normal;\n}\n/* header styles */\nheader {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100px;\n  text-shadow: 10px 10px 10px rgb(236, 153, 37);\n  letter-spacing: 0.5rem;\n  font-size: 30px;\n  font-style: italic;\n}\n/* main styles */\n/* main {\n  height: 100%;\n} */\nmain {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  flex: 1;\n  align-items: center;\n}\n/* players card style */\n#players-card {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 30px;\n  font-family: "Cute Font", cursive;\n}\n#vs {\n  font-size: 50px;\n}\nlabel {\n  font-size: 25px;\n}\n#players-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 80px;\n}\n#player-one-container,\n#player-two-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n  border-radius: 20px;\n  height: 280px;\n  box-shadow: 0px 15px 40px black;\n}\nlabel,\ninput {\n  font-weight: bold;\n}\ninput {\n  text-align: center;\n  width: 50%;\n  border: none;\n  outline: none;\n  border-radius: 10px;\n  margin-bottom: 8px;\n  font-family: "Cute Font", cursive;\n  font-size: 20px;\n  background-color: wheat;\n}\n.fa-solid {\n  font-size: 140px;\n  margin-bottom: 10px;\n}\n/* play and beggin button styles */\n#beggin-button {\n  margin-bottom: 10px;\n}\n#play-button,\n#beggin-button {\n  width: 100px;\n  height: 35px;\n  border-radius: 8px;\n  font-weight: bold;\n  border: none;\n  cursor: pointer;\n  transition: background-color 0.4s ease;\n  font-family: "MyCustomFont", "sans-serif";\n  font-size: 20px;\n  background-color: black;\n  color: white;\n}\n#play-button:hover,\n#beggin-button:hover {\n  background-color: white;\n  color: black;\n}\n/* placing ships card styles */\n#place-player-ships-card {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  box-shadow: 0px 15px 40px black;\n  height: 430px;\n  width: 550px;\n  border-radius: 10px;\n  margin-bottom: 40px;\n  gap: 10px;\n}\n#place-ships-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 90%;\n  flex: 1;\n}\n#player-board-header {\n  font-size: 20px;\n}\n#place-ships-header {\n  margin-top: 10px;\n  font-size: 30px;\n}\n#place-ships-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n}\n#player-board-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 5px;\n  width: 80%;\n  height: 100%;\n}\n#player-game-board,\n#computer-game-board {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n  width: 280px;\n  height: 280px;\n  box-shadow: 0px 15px 40px black;\n}\n/* #computer-game-board div {\n  cursor: pointer;\n} */\n#computer-game-board div:hover,\n#player-game-board div:hover {\n  background-color: yellow;\n}\n\n#player-ship-type-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  /* width: 280px; */\n  height: 100%;\n  width: 50%;\n  box-shadow: 0px 15px 40px black;\n  border-radius: 5px;\n  padding: 5px;\n}\n.player-ship-type {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n}\n#carrier-ship,\n#battle-ship,\n#cruiser-ship,\n#submarine-ship,\n#destroyer-ship {\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  border: none;\n  outline: none;\n  transition: transform 0.3s ease;\n  position: absolute;\n  cursor: pointer;\n  width: 170px;\n  height: 40px;\n  margin-top: 20px;\n  pointer-events: "none";\n}\n#carrier-ship:hover,\n#battle-ship:hover,\n#cruiser-ship:hover,\n#submarine-ship:hover,\n#destroyer-ship:hover {\n  transform: scale(1.1);\n  cursor: pointer;\n}\n/* fix hiding computer images */\n/* .computer-ship-image {\n  z-index: 10;\n} */\n\n#carrier-ship {\n  background-image: url("./images/ships/carrier.svg");\n}\n#battle-ship {\n  background-image: url("./images/ships/battleship.svg");\n}\n#cruiser-ship {\n  background-image: url("./images/ships/cruiser.svg");\n}\n#submarine-ship {\n  background-image: url("./images/ships/submarine.svg");\n}\n#destroyer-ship {\n  background-image: url("./images/ships/destroyer.svg");\n}\n.hover-zoom {\n  transition: transform 0.3s ease;\n}\n.hover-zoom.hovered {\n  transform: scale(1.2);\n}\n.square {\n  position: relative;\n  border: 1px solid;\n}\n/* player vs computer card styles */\n\n#battle-card {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 100px;\n}\n#vs {\n  font-size: 40px;\n}\n#player-name,\n#computer-name {\n  font-size: 25px;\n}\n#player-battle-container,\n#computer-battle-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n}\n\n/* footer styles */\nfooter {\n  border: 1px solid black;\n  height: 50px;\n}\n'],sourceRoot:""}]);const v=g},314:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(a[A]=!0)}for(var l=0;l<e.length;l++){var p=[].concat(e[l]);r&&a[p[0]]||(void 0!==i&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=i),t&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=t):p[2]=t),o&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=o):p[4]="".concat(o)),n.push(p))}},n}},417:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},354:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[n].concat([i]).join("\n")}return[n].join("\n")}},72:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var i={},a=[],s=0;s<e.length;s++){var A=e[s],l=r.base?A[0]+r.base:A[0],p=i[l]||0,c="".concat(l," ").concat(p);i[l]=p+1;var d=t(c),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==d)n[d].references++,n[d].updater(u);else{var h=o(u,r);r.byIndex=s,n.splice(s,0,{identifier:c,updater:h,references:1})}a.push(c)}return a}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var i=r(e=e||[],o=o||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var s=t(i[a]);n[s].references--}for(var A=r(e,o),l=0;l<i.length;l++){var p=t(i[l]);0===n[p].references&&(n[p].updater(),n.splice(p,1))}i=A}}},659:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},540:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},56:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},113:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},16:(e,n,t)=>{e.exports=t.p+"6f126a706023fe19a73f.woff"},210:(e,n,t)=>{e.exports=t.p+"dfee96cf69210b32e6e5.woff2"},437:(e,n,t)=>{e.exports=t.p+"d56e5a89beb359219e25.svg"},391:(e,n,t)=>{e.exports=t.p+"008846a84b2a34dde315.svg"},634:(e,n,t)=>{e.exports=t.p+"0504ee6feab7e47038d3.svg"},764:(e,n,t)=>{e.exports=t.p+"56e5c8a88ff718d93efc.svg"},439:(e,n,t)=>{e.exports=t.p+"543bf6eb30d63dfd7a2f.svg"}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var i=n[r]={id:r,exports:{}};return e[r](i,i.exports,t),i.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");if(r.length)for(var o=r.length-1;o>-1&&(!e||!/^http(s?):/.test(e));)e=r[o--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,t.nc=void 0;var r=t(72),o=t.n(r),i=t(825),a=t.n(i),s=t(659),A=t.n(s),l=t(56),p=t.n(l),c=t(540),d=t.n(c),u=t(113),h=t.n(u),m=t(208),g={};g.styleTagTransform=h(),g.setAttributes=p(),g.insert=A().bind(null,"head"),g.domAPI=a(),g.insertStyleElement=d(),o()(m.A,g),m.A&&m.A.locals&&m.A.locals;const C=class{constructor(e,n){this.isShip=!0,this.shipName=e,this.shipLength=n,this.numberOfHits=0,this.isShipSunk=!1}getShipName(){return this.shipName}getShipLength(){return this.shipLength}hit(){return this.numberOfHits++}isSunk(){return this.numberOfHits>=this.shipLength?this.isShipSunk=!0:this.isShipSunk}},f=class{constructor(e){this.name=e,this.rows=10,this.columns=10,this.board=[],this.allCoords=[]}getBoardName(){return this.name}getPlayerBoard(){return this.board}createBoard(){for(let e=0;e<this.rows;e++){this.board[e]=[];for(let n=0;n<this.columns;n++)this.board[e][n]={coords:[e,n],isShip:!1},this.allCoords.push([e,n])}}placeShip(e,n,t,r){const o=new C(t,r);this.board[e][n]=o}isWithinBounds(e,n){return e>=0&&e<this.rows&&n>=0&&n<this.columns}getPlayerCurrValidCoords(e,n){const t=[Number(e.getAttribute("data-x")),Number(e.getAttribute("data-y"))],r=this.getAllRightSideCoords(t,n);return r.every((([e,n])=>this.isWithinBounds(e,n)))?r:null}isShipCoordsValid(e,n){return!n.some((n=>n.some((n=>e.some((e=>JSON.stringify(n)===JSON.stringify(e)))))))}getAllRightSideCoords(e,n){const[t,r]=e;return[[t,r],[t,r+1],[t,r+2],[t,r+3],[t,r+4]].slice(0,n)}getRandomComputerShipValidCoord(e){const n=this.board.map((e=>e.map((e=>e.coords)))),t=Math.floor(Math.random()*n.length),r=n[t][t];if(!r)return;const o=this.getAllRightSideCoords(r,e);return o.every((([e,n])=>this.isWithinBounds(e,n)))?o:null}getCurrShip(e,n){return this.board[e][n]}getAllCurrShipItems(e){return this.board.flatMap((n=>n.filter((n=>n.shipName===e.shipName))))}receiveAttack(e){this.getAllCurrShipItems(e).forEach((e=>{e.hit(),e.isSunk()}))}getRandomPlayerValidCoord(){const e=Math.floor(Math.random()*this.allCoords.length),n=this.allCoords[e],t=this.allCoords.indexOf(n);return console.log(this.allCoords.length),this.allCoords.splice(t,1),console.log(this.allCoords.length),n}checkPlayerCoordIsAShip(e){const[n,t]=e;return this.board[n][t].isShip}isAllShipsSunk(){for(const e in this.board){const n=[];for(const t in this.board[e])this.board[e][t].hasOwnProperty("value")||n.push(this.board[e][t])}return!!allShips.every((e=>e.isShipSunk))}},y=class{constructor(e){this.name=e,this.gameBoard=new f(this.name),this.gameBoard.createBoard()}getName(){return this.name}getPlayerBoard(){return this.gameBoard}setShipPositionOnBoard(e,n,t){e.map((e=>{const[r,o]=e;this.gameBoard.placeShip(r,o,n,t)}))}createShipType(e){return new C(e,{"carrier-ship":5,"battle-ship":4,"cruiser-ship":3,"submarine-ship":3,"destroyer-ship":2}[e])}},B=document.getElementById("player-game-board"),b=document.getElementById("computer-game-board"),E=[...document.querySelectorAll(".player-ship-image")],x=document.getElementById("play-button"),v=document.getElementById("players-card"),S=document.getElementById("player-one-input"),k=document.getElementById("player-two-input"),w=document.getElementById("player-battle-container"),j=document.getElementById("beggin-button"),P=document.getElementById("place-player-ships-card"),N=document.getElementById("battle-card"),z=document.getElementById("player-name"),Y=document.getElementById("computer-name"),I=new y("humanPlayer"),U=I.getPlayerBoard(),R=(U.getBoardName(),new y("computerPlayer")),L=R.getPlayerBoard(),M=(L.getBoardName(),(e,n)=>{for(const t of e)for(const e of t){const t=document.createElement("div"),[r,o]=e.coords;t.textContent=[r,o],t.setAttribute("data-x",r),t.setAttribute("data-y",o),t.className="square",n.appendChild(t)}}),O={allPreviousShipCoords:[],render(e){e.style.pointerEvents="none";const n=I.createShipType(e.id),t=n.getShipName(),r=n.getShipLength();this.resizePlayerShipImage(e,r);const o=n=>this.followMouse(e,n);document.addEventListener("mousemove",o),this.makeCurrShipUnclickable(e),this.handlePlayerSquareEvent(e,o,t,r)},resizePlayerShipImage(e,n){const t=document.querySelector(".square");e.style.width=t.offsetWidth*n+"px",e.style.height=`${t.offsetHeight}px`},followMouse(e,n){const t=n.clientX,r=n.clientY-e.height/2;e.style.left=`${t}px`,e.style.top=`${r}px`},makeCurrShipUnclickable(e){const n=E.indexOf(e);E[n].style.pointerEvents="none"},handlePlayerSquareEvent(e,n,t,r){const o=[...B.children];let i=!1;o.map((o=>o.addEventListener("click",(()=>{if(!i){const a=U.getPlayerCurrValidCoords(o,r);if(!a)return;if(!U.isShipCoordsValid(a,this.allPreviousShipCoords))return;document.removeEventListener("mousemove",n),this.allPreviousShipCoords.push(a),this.placeShipOnBoard(o,e),I.setShipPositionOnBoard(a,t,r),i=!0}}))))},placeShipOnBoard(e,n){n.style.position="absolute",n.style.top="-75%",n.style.left="0%",n.style.pointerEvents="none",e.appendChild(n)}},D={render(){const e=this.getComputerShipTypes();this.placeComputerShips(e)},getComputerShipTypes(){const e=E.map((e=>{const n=e.cloneNode(!0);return n.className="computer-ship-image",n}));return[["carrier-ship",5,e[0]],["battle-ship",4,e[1]],["cruiser-ship",3,e[2]],["submarine-ship",3,e[3]],["destroyer-ship",2,e[4]]]},placeComputerShips(e){e.map((([e,n,t])=>{let r=this.getValidCoords(n);this.placeComputerShipsOnBoard(r[0],t,n),this.hideComputerShipImages(),R.setShipPositionOnBoard(r,e,n)}))},getValidCoords(e){let n=null;for(;!n;)n=L.getRandomComputerShipValidCoord(e);return n},placeComputerShipsOnBoard(e,n,t){O.resizePlayerShipImage(n,t);const[r,o]=e,i=[...b.children].find((e=>+e.dataset.x==r&&+e.dataset.y==o));O.placeShipOnBoard(i,n)},hideComputerShipImages(){[...document.querySelectorAll(".computer-ship-image")].forEach((e=>e.style.display="none"))}};x.addEventListener("click",(()=>{var e,n;e=S.value,n=k.value,(e&&n||(alert("Must Enter Names!"),0))&&(v.style.display="none",P.style.display="flex")})),j.addEventListener("click",(()=>{(0!=![...document.querySelectorAll(".player-ship-type")].filter((e=>e.querySelector("img"))).length||(alert("Must Place All Player Ships!"),0))&&(P.style.display="none",N.style.display="flex",z.textContent=`${S.value.toUpperCase()} WATERS`,Y.textContent=`${k.value.toUpperCase()} WATERS`,w.appendChild(B),M(L.board,b),D.render(),T.togglePlayers(I.getName()))}));const T={togglePlayers(e){B.style.pointerEvents="none",b.style.pointerEvents="none",console.log("CURRENT PLAYER!",e),e==I.getName()?this.attackComputerPlayer(b,L):e==R.getName()&&this.attackHumanPlayer(B,U)},attackComputerPlayer(e,n){e.style.pointerEvents="auto",e.style.cursor="pointer",[...e.children].forEach((e=>{const t=e.cloneNode(!0);e.replaceWith(t),t.addEventListener("click",(()=>{console.log("#".repeat(20)),t.style.pointerEvents="none";const e=this.getCurrCoords(t),[r,o]=e,i=n.getCurrShip(r,o);if(!i.isShip)return t.style.background="white",void this.togglePlayers(R.getName());if(t.style.background="red",n.receiveAttack(i),console.log("player ship",i,i.isShip,n),i.isSunk()){const e=this.getComputerSunkShipImage(i);console.log(e),this.hideCurrShipHits(i.getShipLength(),e.parentElement),e.style.display="flex"}}))}))},attackHumanPlayer(e,n){e.style.pointerEvents="auto",e.style.cursor="pointer";const t=n.getRandomPlayerValidCoord(),[r,o]=t,i=this.getCurrSquareElement(e,r,o);i.style.pointerEvents="none";const a=n.getCurrShip(r,o);if(!a.isShip)return i.style.background="white",void this.togglePlayers(I.getName());if(i.style.background="red",n.receiveAttack(a),a.isSunk()){const e=this.getHumanSunkShipImage(a);this.hideCurrShipHits(a.getShipLength(),e.parentElement),e.style.display="flex"}this.togglePlayers(R.getName())},getCurrSquareElement:(e,n,t)=>[...e.children].find((e=>+e.dataset.x==n&&+e.dataset.y==t)),getCurrCoords:e=>[Number(e.dataset.x),Number(e.dataset.y)],getComputerSunkShipImage:e=>[...document.querySelectorAll(".computer-ship-image")].find((n=>n.id==e.shipName)),getHumanSunkShipImage:e=>[...E].find((n=>n.id==e.shipName)),hideCurrShipHits(e,n){const t=[];for(let r=0;r<e;r++)t.push(n),n=n.nextElementSibling;t.forEach((e=>{e.style.background="none"}))}};M(U.board,B),E.map((e=>{e.addEventListener("click",O.render(e))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,